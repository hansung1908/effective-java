// 이 코드는 범용적으로 작성되었지만 현존하는 모든 Collection 구현체와 잘 어우러지는것은 아니다.
// 대표적인 예가 SyncronizedCollection이다.
// SynchronizedCollection 인스턴스를 여러 스레드가 공유하는 환경에서 한 스레드가 removeIf를 호출하면
// ConcurrentModificationException이 발생하거나 다른 오류가 발생할 가능성이 있다.
default boolean removeIf(Predicate<? super E> filter) {
    Objects.requireNonNull(filter);
    boolean result = false;
    for (Iterator<E> it = iterator(); it.hasNext();){
        if(filter.test(it.next())){
            it.remove();
            result = true;
         }
     }
    return result;
}

// 4.4 이후 버전에서는 Collection.synchronizedCollection이 반환하는 package-private 클래스들은 removeIf를 재정의하고,
// 이를 호출하는 다른 메서드들은 디폴트 구현을 호출하기 전에 동기화 하도록 했다.
@Override
public boolean removeIf(final Predicate<? super E> filter) {
    synchronized (lock) {
        return decorated().removeIf(filter);
    }
}